name: 🚀 Deploy
on:
  push:
    branches:
      - main
      - dev
  pull_request: {}

jobs:
  only-doc-changes:
    name: 📒 Only doc changes?
    runs-on: ubuntu-latest
    outputs:
      only-doc-changes: ${{ steps.only-doc-changes.outputs.only_modified }}
    steps:
      - name: 🛑 Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.9.1

      - name: ⬇️ Checkout repo
        uses: actions/checkout@v3
        with:
          fetch-depth: 2 # Fetch the preceding commit as well, to detect changes

      - name: 🕵️‍♀️ Detect if doc-only changes
        id: only-doc-changes
        uses: tj-actions/changed-files@v19
        with:
          files: |
            README.md
            LICENSE.md
            .vscode/
            docs/
            .env.example
            remix.init

  ci:
    name: 🫠 Build, lint, test
    needs: only-doc-changes
    if: needs.only-doc-changes.outputs.only-doc-changes == 'false'
    runs-on: ubuntu-latest
    timeout-minutes: 30
    services:
      edgedb:
        image: edgedb/edgedb:1
        env:
          EDGEDB_SERVER_SECURITY: insecure_dev_mode
        ports:
          - 5656:5656
    steps:
      - name: ⬇️ Checkout repo
        uses: actions/checkout@v3

      - name: ⬡ Setup node
        uses: actions/setup-node@v3
        with:
          node-version: 17

      - name: 📥 Download deps
        uses: bahmutov/npm-install@v1

      # We can lint before installing EdgeDB, so do that first to fail fast
      - name: 🔬 Lint
        run: yarn lint

      - name: 💿 Install EdgeDB
        uses: edgedb/setup-edgedb@v1
        with:
          server-dsn: edgedb://localhost:5656
          instance-name: ci_edgedb_instance

      - name: 👾 Generate EdgeQL client
        run: yarn generate:edgeql

      - name: 🔎 Type check
        run: yarn typecheck

      - name: ⚡ Run vitest
        run: yarn test:cov

      - name: 🔑 Make envfile
        uses: SpicyPizza/create-envfile@v1.3
        with:
          envkey_NODE_ENV: development
          envkey_CLERK_FRONTEND_API: ${{ secrets.CLERK_FRONTEND_API }}
          envkey_CLERK_API_KEY: ${{ secrets.CLERK_API_KEY }}
          envkey_CLERK_JWT_KEY: ${{ secrets.CLERK_JWT_KEY }}
          file_name: .env

      - name: ⚙️ Build app with mocks
        run: yarn build && yarn mocks:build

      - name: 🌳 Cypress run
        uses: cypress-io/github-action@v3
        with:
          start: yarn start-with-mocks
          wait-on: "http://localhost:8811"
        env:
          PORT: "8811"

  build:
    name: 🐳 Build Docker image
    needs: only-doc-changes
    # only build/deploy main branch on pushes. also dont deploy the template repo.
    if: |
      needs.only-doc-changes.outputs.only-doc-changes == 'false'
      && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/dev')
      && github.event_name == 'push'
      && github.repository != 'jkcorrea/remix-chop-suey-stack'
    runs-on: ubuntu-latest
    steps:
      - name: ⬇️ Checkout repo
        uses: actions/checkout@v3

      - name: 👀 Read app name
        uses: SebRollen/toml-action@v1.0.0
        id: app_name
        with:
          file: "fly.toml"
          field: "app"

      - name: 🐳 Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: 🔑 Fly Registry Auth
        uses: docker/login-action@v1
        with:
          registry: registry.fly.io
          username: x
          password: ${{ secrets.FLY_API_TOKEN }}

      - name: 🐳 Docker build and push
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: registry.fly.io/${{ steps.app_name.outputs.value }}:${{ github.ref_name }}-${{ github.sha }}
          build-args: |
            COMMIT_SHA=${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  deploy:
    name: 🚀 Deploy
    runs-on: ubuntu-latest
    needs: [ci, build]
    # only build/deploy main branch on pushes. also dont deploy the template repo.
    if: |
      (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/dev')
      && github.event_name == 'push'
      && github.repository != 'jkcorrea/remix-chop-suey-stack'

    steps:
      - name: ⬇️ Checkout repo
        uses: actions/checkout@v3

      - name: 👀 Read app name
        uses: SebRollen/toml-action@v1.0.0
        id: app_name
        with:
          file: "fly.toml"
          field: "app"

      - name: 🚀 Deploy Staging
        if: ${{ github.ref == 'refs/heads/dev' }}
        uses: superfly/flyctl-actions@1.3
        with:
          args: "deploy --app ${{ steps.app_name.outputs.value }}-staging --image registry.fly.io/${{ steps.app_name.outputs.value }}:${{ github.ref_name }}-${{ github.sha }}"
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}

      - name: 🚀 Deploy Production
        if: ${{ github.ref == 'refs/heads/main' }}
        uses: superfly/flyctl-actions@1.3
        with:
          args: "deploy --image registry.fly.io/${{ steps.app_name.outputs.value }}:${{ github.ref_name }}-${{ github.sha }}"
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
